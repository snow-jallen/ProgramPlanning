@page
@model IndexModel
@using Syncfusion.EJ2;
@using Syncfusion.EJ2.Diagrams;
@using ProgramPlanning.Shared.Services;
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Snow SE - Program Planning</h1>
</div>

<div class="control-section">
    <ejs-diagram id="swimlaneDiagram"
                 width="100%"
                 height="700px"
                 getNodeDefaults="@ViewBag.getNodeDefaults"
                 getConnectorDefaults="@ViewBag.getConnectorDefaults">
        <e-diagram-datasourcesettings id="Name"
                                      parentId="Prerequisites"
                                      dataSource="new DataManager() { Data = (List<Course>)ViewBag.Nodes }">
        </e-diagram-datasourcesettings>
        <e-diagram-layout type="HierarchicalTree" horizontalSpacing="15" verticalSpacing="40" margin="new DiagramMargin() { Left = 10, Top = 50 }">

        </e-diagram-layout>
    </ejs-diagram>
    <ejs-diagram id="diagram"
                 width="100%"
                 height="700px"
                 getNodeDefaults="@ViewBag.getNodeDefaults"
                 getConnectorDefaults="@ViewBag.getConnectorDefaults"
                 created="diagramCreated">
        <e-diagram-snapsettings constraints="None">

        </e-diagram-snapsettings>
        <e-diagram-datasourcesettings id="CourseName"
                                      parentId="Prerequisites"
                                      dataSource="new DataManager(){ Data = (List<Course>)ViewBag.Nodes }">

        </e-diagram-datasourcesettings>
        <e-diagram-layout type="HierarchicalTree"
                          horizontalSpacing="15"
                          verticalSpacing="50">

        </e-diagram-layout>
    </ejs-diagram>
</div>

<style>
    #diagram {
        display: block;
    }

    .row {
        display: block;
    }
</style>

<script>
        function diagramCreated() {
            var diagram = document.getElementById("diagram").ej2_instances[0];
            diagram.tool = ej.diagrams.DiagramTools.ZoomPan;
            diagram.dataBind();
        }

        function getNodeDefaults(obj, diagram) {
            //Initialize shape
            obj.shape = { type: 'Text', content: obj.data.Name };
            obj.annotations = [{
                /* tslint:disable:no-string-literal */
                content: obj.data.Name,
                margin: {top: 10, left: 10, right: 10, bottom: 0},
                style: { color: 'black' }
            }];
            obj.style =

                {
                    fill: '#ffeec7', strokeColor: '#f5d897', strokeWidth: 1
                }

                ; obj.shape = {
                    type: 'Basic', shape: 'Rectangle'
                }

                ; obj.width = 95; obj.height = 30; return obj;
        }

        function getConnectorDefaults(connector, diagram) {
            connector.type = 'Orthogonal';
            connector.style.strokeColor = '#4d4d4d';
            connector.targetDecorator.shape = 'None';
            connector.cornerRadius = 5;
            return connector;
        }

</script>
